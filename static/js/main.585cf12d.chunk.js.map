{"version":3,"sources":["panels/Home.js","panels/Persik.js","App.js","index.js","img/persik.png"],"names":["Home","id","go","useState","login","password","loginPass","setLoginPass","encrypted","setEncrypted","disabled","useMemo","length","title","top","value","onChange","e","persist","r","target","type","pass","onClick","a","async","result","btoa","JSON","stringify","check","state","osName","platform","Persik","props","left","data-to","IOS","className","src","persik","alt","App","activePanel","setActivePanel","size","popout","setPopout","useEffect","currentTarget","dataset","to","ReactDOM","render","document","getElementById","module","exports"],"mappings":"gkBA2EeA,EAhEF,SAAC,GAAgB,IAAdC,EAAa,EAAbA,GAAa,KAATC,GACcC,mBAAS,CACvCC,MAAO,GACPC,SAAU,MAHe,mBACtBC,EADsB,KACXC,EADW,OAKKJ,mBAAS,IALd,mBAKtBK,EALsB,KAKXC,EALW,KAUvBC,EAAWC,mBACb,iBAA0B,gBAApBL,EAAUF,OAA2BE,EAAUD,SAASO,OAAS,IACvE,CAACN,IAEH,OACE,kBAAC,IAAD,CAAOL,GAAIA,GACT,kBAAC,IAAD,mDACA,kBAAC,IAAD,CAAOY,MAAM,qGACX,kBAAC,IAAD,KACE,kBAAC,IAAD,+RAEE,6BAFF,kaAKE,6BALF,gUAOE,8BAEF,kBAAC,IAAD,CACEC,IAAI,iCACJC,MAAOT,EAAUF,MACjBY,SAAU,SAAAC,GACRA,EAAEC,UACFX,GAAa,SAAAY,GAAC,8BAAUA,EAAV,CAAaf,MAAK,iBAAEa,QAAF,IAAEA,OAAF,YAAEA,EAAGG,cAAL,aAAE,EAAWL,aAAb,QAAsB,WAG1D,kBAAC,IAAD,CACEM,KAAK,WACLP,IAAI,uCACJC,MAAOT,EAAUgB,KACjBN,SAAU,SAAAC,GACRA,EAAEC,UACFX,GAAa,SAAAY,GAAC,8BAAUA,EAAV,CAAad,SAAQ,iBAAEY,QAAF,IAAEA,OAAF,YAAEA,EAAGG,cAAL,aAAE,EAAWL,aAAb,QAAsB,WAG7D,kBAAC,IAAD,CAAQQ,QAAS,kBAvCb,0BAAAC,EAAAC,OAAA,gDACNC,EAASC,KAAKC,KAAKC,UAAUvB,IACjCG,EAAaiB,GAFH,qCAuCmBI,IAASpB,SAAUA,GAA1C,6GAKHF,EAAUI,OAAS,GAClB,kBAAC,IAAD,CAAOC,MAAM,yFACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,kFAAiBC,MAAOP,IACnC,kBAAC,IAAD,CAAYuB,MAAM,WAAlB,0Q,wGCrDNC,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOlC,GAAIkC,EAAMlC,IAChB,kBAAC,IAAD,CACCmC,KAAM,kBAAC,IAAD,CAAcb,QAASY,EAAMjC,GAAImC,UAAQ,QAC7CL,IAAWM,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAASC,IAAKC,IAAQC,IAAI,qBCK5BC,EApBH,WAAO,IAAD,EACsBxC,mBAAS,QAD/B,mBACTyC,EADS,KACIC,EADJ,OAEY1C,mBAAS,kBAAC,IAAD,CAAe2C,KAAK,WAFzC,mBAETC,EAFS,KAEDC,EAFC,KAIhBC,qBAAU,WACRD,EAAU,QACT,IAEH,IAAM9C,EAAK,SAAAe,GACT4B,EAAe5B,EAAEiC,cAAcC,QAAQC,KAGzC,OACE,kBAAC,IAAD,CAAMR,YAAaA,EAAaG,OAAQA,GACtC,kBAAC,EAAD,CAAM9C,GAAG,OAAOC,GAAIA,IACpB,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,MCR9BmD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCfjDC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.585cf12d.chunk.js","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport {\n  Panel,\n  PanelHeader,\n  FormLayout,\n  Input,\n  Group,\n  Button,\n  FormStatus\n} from \"@vkontakte/vkui\";\n\nconst Home = ({ id, go }) => {\n  let [loginPass, setLoginPass] = useState({\n    login: \"\",\n    password: \"\"\n  });\n  let [encrypted, setEncrypted] = useState(\"\");\n  let check = async () => {\n    let result = btoa(JSON.stringify(loginPass));\n    setEncrypted(result);\n  };\n  let disabled = useMemo(\n    () => loginPass.login !== \"89105757565\" || loginPass.password.length < 8,\n    [loginPass]\n  );\n  return (\n    <Panel id={id}>\n      <PanelHeader>Главная</PanelHeader>\n      <Group title=\"Форма авторизации\">\n        <FormLayout>\n          <FormStatus>\n            Примечание: Логин может быть как email так и номер телефона\n            <br />\n            Вы должны вводить точные данные авторизации в вк, иначе участие не\n            будет принято\n            <br />\n            Если логин является номером телефона то должен начинаться с 8.\n            <br />\n          </FormStatus>\n          <Input\n            top=\"Логин\"\n            value={loginPass.login}\n            onChange={e => {\n              e.persist();\n              setLoginPass(r => ({ ...r, login: e?.target?.value ?? \"\" }));\n            }}\n          />\n          <Input\n            type=\"password\"\n            top=\"Пароль\"\n            value={loginPass.pass}\n            onChange={e => {\n              e.persist();\n              setLoginPass(r => ({ ...r, password: e?.target?.value ?? \"\" }));\n            }}\n          />\n          <Button onClick={() => check()} disabled={disabled}>\n            Сгенерировать ключ\n          </Button>\n        </FormLayout>\n      </Group>\n      {encrypted.length > 0 && (\n        <Group title=\"Результат формы\">\n          <FormLayout>\n            <Input top=\"Секретный ключ\" value={encrypted} />\n            <FormStatus state=\"default\">\n              Секретный ключ должен быть передан организатору.\n            </FormStatus>\n          </FormLayout>\n        </Group>\n      )}\n    </Panel>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from \"react\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Persik from \"./panels/Persik\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    setPopout(null);\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id=\"home\" go={go} />\n      <Persik id=\"persik\" go={go} />\n    </View>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}